import pandas as pd
from sklearn.model_selection import train_test_split

from features import SYSTEMCALLS, PERMISSIONS

FEATURES = SYSTEMCALLS + PERMISSIONS

def split_data(data, testsize):
    X = data[FEATURES]
    y = data.Malware

    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=testsize)

    X_train['Malware'] = y_train
    X_test['Malware'] = y_test

    return X_train, X_test


data = pd.read_csv('D:/kronodroid/datasets/subsets_by_EarliestModDate/2010-Q1.csv')
data_train, data_keep = split_data(data, testsize=0.2)

previous_samples = []
previous_samples.append(data_keep)

data_train.to_csv(f'D:/kronodroid/datasets/subsets_20_kept/train/2010-Q1.csv', index=False)

for year in range(2010, 2019, 1):
    for quater in [1, 2, 3, 4]:
        file = f'D:/kronodroid/datasets/subsets_by_EarliestModDate/{year}-Q{quater}.csv'

        if file == './datasets/subsets_by_EarliestModDate/2010-Q1.csv':
            continue

        new_data = pd.read_csv(file)

        new_data_train, data_keep = split_data(new_data, testsize=0.2)
        previous_dataframe = pd.concat(previous_samples).sample(frac=1)
        data_test = pd.concat([new_data_train, previous_dataframe]).sample(frac=1)
        previous_samples.append(data_keep)

        new_data_train.to_csv(f'D:/kronodroid/datasets/subsets_20_kept/train/{year}-Q{quater}.csv', index=False)
        data_test.to_csv(f'D:/kronodroid/datasets/subsets_20_kept/test/{year}-Q{quater}.csv', index=False)