import pandas as pd
import re

from features import SYSTEMCALLS, PERMISSIONS

FEATURES = SYSTEMCALLS + PERMISSIONS
FEATURES.append('Malware')

# yyyy-mm-dd

data = pd.read_csv('./datasets/full_dataset.csv')

data.EarliestModDate = pd.to_datetime(data.EarliestModDate, errors='coerce').dropna()
data.HighestModDate = pd.to_datetime(data.HighestModDate, errors='coerce').dropna()
print('EarliestModDate | HighestModDate')
for year in range(2010, 2020, 1):
    quater = 1
    for month in range(1, 11, 3):
        if month == 10:
            mask_EarliestModDate = (data.EarliestModDate >= pd.Timestamp(f'{year}-{month}-01')) & (data.EarliestModDate < pd.Timestamp(f'{year+1}-01-01'))
            mask_HighestModDate = (data.HighestModDate >= pd.Timestamp(f'{year}-{month}-01')) & (data.HighestModDate < pd.Timestamp(f'{year+1}-01-01'))
        else:
            mask_EarliestModDate = (data.EarliestModDate >= pd.Timestamp(f'{year}-{month}-01')) & (data.EarliestModDate < pd.Timestamp(f'{year}-{month + 3}-01'))
            mask_HighestModDate = (data.HighestModDate >= pd.Timestamp(f'{year}-{month}-01')) & (data.HighestModDate < pd.Timestamp(f'{year}-{month + 3}-01'))
        
        quater_EarliestModDate = data.loc[mask_EarliestModDate]
        quater_EarliestModDate = quater_EarliestModDate[FEATURES]
        quater_EarliestModDate.to_csv(f'./datasets/subsets_by_EarliestModDate/{year}-Q{quater}.csv', index=False)
        print(f'{year}-Q{quater}: benign {quater_EarliestModDate.Malware.value_counts()[0]}, malicious {quater_EarliestModDate.Malware.value_counts()[1]}', end='  \t|  ')

        quater_HighestModDate = data.loc[mask_HighestModDate]
        quater_HighestModDate = quater_HighestModDate[FEATURES]
        quater_HighestModDate.to_csv(f'./datasets/subsets_by_HighestModDate/{year}-Q{quater}.csv', index=False)
        print(f'benign {quater_HighestModDate.Malware.value_counts()[0]}, malicious {quater_HighestModDate.Malware.value_counts()[1]}')

        quater += 1
    print()