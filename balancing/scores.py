from visualization import Plot, Graph

class Scores:
    def __init__(self, name, accuracy, precision, recall, f1) -> None:
        self.name = name
        self.accuracy = accuracy
        self.f1 = f1
        self.precision = precision
        self.recall = recall
    
    def display(self):
        print(f'{self.name}_accuracy =', self.accuracy)
        print(f'{self.name}_f1 =', self.f1)
        print(f'{self.name}_recall =', self.recall)
        print(f'{self.name}_precision =', self.precision)
    
    def avg_accuracy(self):
        return round(sum(self.accuracy) / len(self.accuracy), 1)
    
    def avg_f1(self):
        return round(sum(self.f1) / len(self.f1), 1)
    
    def avg_recall(self):
        return round(sum(self.recall) / len(self.recall), 1)
    
    def avg_precision(self):
        return round(sum(self.precision) / len(self.precision), 1)

scores_new = []
scores_real = []

NONE_new = Scores(name='NONE_new',
               accuracy=[94.3, 97.2, 95.7, 96.3, 96.3, 90.5, 69.7, 75.5, 90.7, 91.9, 94.6, 93.6, 92.8, 93.1, 97.1, 97.0, 94.7, 98.5, 90.0, 91.2, 89.4, 93.8, 86.0, 97.6, 97.2, 62.6, 87.9, 91.7, 99.6, 99.0, 93.0, 97.0, 97.7, 70.0, 69.4],
               f1=[67.8, 70.5, 73.7, 78.1, 76.6, 76.2, 81.8, 85.5, 95.0, 95.4, 97.1, 96.4, 95.9, 96.3, 98.4, 98.3, 97.1, 99.2, 93.2, 92.3, 92.3, 95.5, 89.5, 98.6, 98.0, 73.5, 91.8, 95.0, 99.8, 99.5, 96.3, 98.5, 98.8, 79.3, 80.7],
               recall=[51.3, 55.6, 58.6, 64.7, 62.6, 61.7, 69.3, 74.6, 90.6, 91.3, 94.3, 93.1, 92.3, 93.0, 97.3, 97.1, 94.8, 98.6, 89.3, 92.9, 87.5, 96.3, 85.6, 98.7, 99.3, 58.9, 89.6, 94.2, 99.8, 99.5, 93.2, 97.6, 98.7, 74.2, 92.0],
               precision=[100.0, 96.1, 99.2, 98.5, 98.6, 99.5, 99.9, 100.0, 100.0, 99.9, 100.0, 99.8, 99.8, 99.8, 99.6, 99.5, 99.5, 99.8, 97.5, 91.7, 97.6, 94.7, 93.8, 98.6, 96.8, 97.6, 94.0, 95.8, 99.8, 99.5, 99.5, 99.4, 99.0, 85.2, 71.9])
scores_new.append(NONE_new)

NONE_real = Scores(name='NONE_real',
              accuracy=[94.2, 96.7, 96.0, 96.9, 96.9, 94.3, 97.2, 97.8, 98.7, 98.5, 98.4, 98.5, 98.3, 98.3, 98.4, 98.4, 98.1, 98.2, 97.9, 97.7, 98.0, 97.9, 97.9, 97.9, 97.9, 97.7, 97.7, 98.0, 98.0, 98.0, 98.1, 98.0, 97.9, 97.7, 97.9],
              f1=[67.1, 80.6, 75.7, 81.2, 81.2, 80.1, 84.1, 87.8, 93.3, 92.2, 92.0, 92.4, 91.5, 91.4, 92.4, 92.3, 90.9, 91.5, 89.9, 89.3, 90.8, 90.1, 90.1, 90.1, 89.8, 88.9, 89.3, 90.7, 90.7, 90.5, 91.0, 90.5, 90.2, 89.5, 90.5],
              recall=[50.5, 67.9, 61.3, 69.2, 69.2, 67.4, 74.3, 80.7, 91.3, 91.3, 92.4, 94.0, 93.6, 93.2, 96.4, 96.8, 94.6, 96.9, 94.7, 95.3, 96.7, 97.5, 95.7, 96.4, 94.9, 92.6, 95.3, 97.0, 96.9, 96.3, 97.0, 97.5, 96.9, 96.0, 97.3],
              precision=[100.0, 99.1, 98.9, 98.3, 98.3, 98.9, 97.0, 96.2, 95.3, 93.1, 91.7, 90.9, 89.6, 89.7, 88.7, 88.3, 87.6, 86.6, 85.6, 84.0, 85.5, 83.7, 85.1, 84.5, 85.3, 85.5, 84.0, 85.2, 85.3, 85.4, 85.8, 84.5, 84.4, 83.8, 84.5])
scores_real.append(NONE_real)

SMOTE_new = Scores(name='SMOTE_new',
                   accuracy=[94.3, 96.6, 95.6, 96.2, 96.5, 94.6, 78.1, 83.6, 94.5, 94.8, 95.8, 95.1, 96.1, 95.0, 97.6, 97.7, 94.8, 98.5, 90.6, 90.2, 90.6, 94.3, 84.4, 97.9, 97.0, 59.1, 87.5, 91.7, 99.6, 99.0, 92.5, 97.1, 97.9, 72.5, 69.4],
                   f1=[68.3, 69.6, 76.2, 79.5, 81.1, 88.4, 87.5, 90.7, 97.2, 97.1, 97.8, 97.3, 97.8, 97.3, 98.7, 98.7, 97.2, 99.2, 93.7, 91.5, 93.2, 95.9, 88.3, 98.8, 97.9, 70.4, 91.5, 95.0, 99.8, 99.5, 96.0, 98.5, 98.9, 80.7, 80.7],
                   recall=[51.8, 66.2, 67.9, 72.5, 77.6, 84.2, 77.8, 83.0, 94.5, 94.5, 95.8, 95.1, 96.0, 95.0, 98.0, 98.0, 95.0, 98.8, 90.2, 92.5, 88.7, 97.3, 83.9, 99.0, 99.3, 55.1, 89.1, 94.2, 99.8, 99.5, 92.6, 97.7, 98.8, 74.2, 92.0],
                   precision=[100.0, 73.3, 86.9, 88.0, 85.1, 93.1, 100.0, 100.0, 100.0, 99.8, 99.7, 99.5, 99.8, 99.8, 99.4, 99.5, 99.4, 99.6, 97.6, 90.5, 98.1, 94.5, 93.1, 98.6, 96.6, 97.2, 94.0, 95.8, 99.8, 99.5, 99.7, 99.4, 99.0, 88.5, 71.9])
scores_new.append(SMOTE_new)

SMOTE_real = Scores(name='SMOTE_real',
                   accuracy=[94.4, 97.0, 95.8, 96.5, 97.1, 95.8, 97.2, 97.6, 97.9, 97.8, 97.7, 97.7, 97.9, 97.5, 97.9, 98.0, 97.8, 98.0, 97.7, 97.5, 97.9, 98.0, 97.7, 97.8, 97.6, 97.6, 97.7, 98.0, 97.9, 98.0, 97.9, 98.0, 98.0, 97.7, 98.0],
                   f1=[68.5, 83.7, 77.0, 81.2, 84.4, 87.0, 85.5, 87.9, 89.9, 89.5, 89.2, 89.0, 90.3, 88.4, 90.3, 90.9, 89.6, 90.6, 89.1, 88.6, 90.0, 90.7, 89.5, 89.7, 88.7, 88.4, 89.3, 90.9, 90.1, 90.8, 90.4, 90.4, 90.7, 89.3, 90.8],
                   recall=[52.1, 77.6, 70.2, 76.9, 82.4, 83.1, 81.6, 88.6, 95.3, 93.4, 94.8, 94.6, 96.4, 94.8, 97.2, 97.4, 95.7, 96.9, 95.0, 95.9, 96.5, 97.9, 96.4, 96.7, 95.0, 92.8, 95.3, 97.3, 97.2, 96.4, 97.2, 96.4, 97.3, 95.3, 97.0],
                   precision=[100.0, 90.8, 85.1, 86.0, 86.4, 91.2, 89.8, 87.2, 85.1, 85.9, 84.2, 83.9, 84.9, 82.8, 84.3, 85.2, 84.2, 85.0, 83.8, 82.2, 84.4, 84.5, 83.5, 83.5, 83.2, 84.5, 84.1, 85.2, 84.0, 85.8, 84.4, 85.1, 84.9, 84.1, 85.3])
scores_real.append(SMOTE_real)

RandomOverSampler_new = Scores(name='RandomOverSampler_real',
                   accuracy=[94.4, 97.1, 95.6, 96.5, 96.5, 92.5, 73.6, 78.1, 92.6, 93.2, 95.6, 93.8, 95.4, 93.7, 97.5, 97.4, 94.7, 98.4, 90.0, 91.2, 90.5, 93.8, 84.4, 97.5, 97.4, 61.5, 86.8, 93.1, 99.6, 99.0, 92.7, 98.0, 97.9, 70.0, 69.4],
                   f1=[68.7, 71.7, 73.3, 79.6, 79.3, 82.1, 84.5, 87.2, 96.1, 96.1, 97.6, 96.5, 97.4, 96.6, 98.6, 98.6, 97.1, 99.1, 93.3, 92.2, 93.0, 95.5, 88.2, 98.6, 98.2, 72.7, 91.0, 95.8, 99.8, 99.5, 96.1, 99.0, 98.9, 79.3, 80.7],
                   recall=[52.4, 60.9, 58.6, 67.4, 69.3, 70.0, 73.2, 77.2, 92.6, 92.6, 95.5, 93.7, 95.1, 93.5, 97.7, 97.5, 94.8, 98.6, 89.6, 92.2, 88.2, 95.7, 83.6, 98.6, 99.6, 58.0, 89.1, 95.0, 99.8, 99.5, 92.9, 98.6, 98.8, 74.2, 92.0],
                   precision=[100.0, 87.1, 97.7, 97.2, 92.7, 99.3, 100.0, 100.0, 100.0, 100.0, 99.9, 99.4, 99.9, 99.8, 99.5, 99.6, 99.5, 99.7, 97.3, 92.2, 98.4, 95.2, 93.4, 98.5, 96.8, 97.1, 93.0, 96.6, 99.8, 99.5, 99.5, 99.4, 99.0, 85.2, 71.9])
scores_new.append(RandomOverSampler_new)

RandomOverSampler_real = Scores(name='RandomOverSampler_real',
                   accuracy=[94.4, 96.8, 96.2, 96.9, 97.1, 95.4, 97.4, 97.9, 98.5, 98.3, 98.1, 98.3, 98.3, 98.1, 98.2, 98.2, 98.0, 98.1, 97.7, 97.6, 98.0, 97.9, 97.8, 97.7, 97.6, 97.6, 97.6, 98.1, 98.1, 98.0, 98.1, 98.1, 98.1, 97.9, 98.0],
                   f1=[68.0, 81.1, 76.9, 81.6, 82.6, 84.4, 85.5, 88.7, 92.4, 91.4, 90.7, 91.5, 91.8, 90.7, 91.5, 91.4, 90.6, 90.9, 89.4, 88.9, 90.6, 90.3, 89.9, 89.5, 88.9, 88.4, 88.8, 91.1, 91.3, 90.8, 91.2, 90.9, 90.9, 90.2, 90.6],
                   recall=[51.5, 69.1, 63.8, 70.4, 71.7, 74.0, 77.5, 84.1, 93.1, 91.9, 92.5, 94.5, 94.7, 93.7, 96.6, 96.5, 95.8, 96.6, 94.7, 95.8, 96.5, 97.9, 95.7, 96.6, 94.9, 93.1, 95.0, 97.3, 97.3, 96.7, 97.0, 96.9, 97.0, 95.6, 97.0],
                   precision=[100.0, 98.3, 96.9, 96.9, 97.3, 98.3, 95.4, 93.7, 91.7, 90.8, 88.9, 88.8, 89.1, 87.9, 86.9, 86.8, 85.9, 85.8, 84.6, 82.9, 85.3, 83.8, 84.7, 83.4, 83.7, 84.2, 83.3, 85.5, 85.9, 85.6, 86.0, 85.6, 85.4, 85.4, 84.9])
scores_real.append(RandomOverSampler_real)

# ADASYN_new = Scores(name='ADASYN_new',
#                    accuracy=,
#                    f1=,
#                    recall=,
#                    precision=)

# ADASYN_real = Scores(name='ADASYN_real',
#                    accuracy=,
#                    f1=,
#                    recall=,
#                    precision=)

RandomUnderSampler_new = Scores(name='RandomUnderSampler_new',
                   accuracy=[94.3, 92.3, 92.8, 94.2, 93.9, 93.5, 84.4, 89.0, 96.0, 96.9, 96.6, 95.0, 96.3, 94.9, 98.0, 97.5, 94.6, 98.4, 90.2, 90.8, 89.9, 93.4, 84.8, 97.5, 96.9, 62.2, 87.2, 91.7, 99.7, 99.0, 92.8, 98.3, 98.0, 72.5, 75.0],
                   f1=[68.3, 54.7, 71.2, 75.9, 73.9, 87.4, 91.4, 94.0, 97.9, 98.3, 98.2, 97.2, 98.0, 97.3, 98.9, 98.6, 97.0, 99.1, 93.4, 92.0, 92.7, 95.2, 88.6, 98.6, 97.8, 73.2, 91.2, 94.9, 99.8, 99.5, 96.2, 99.1, 99.0, 80.7, 83.6],
                   recall=[51.8, 78.2, 85.3, 88.8, 89.8, 91.1, 84.3, 88.9, 96.0, 96.9, 96.8, 95.4, 96.1, 95.0, 98.4, 97.8, 94.8, 98.7, 90.0, 93.5, 87.8, 95.5, 84.2, 98.5, 99.3, 58.7, 89.1, 93.3, 99.8, 99.5, 93.1, 98.9, 98.7, 74.2, 92.0],
                   precision=[100.0, 42.1, 61.1, 66.3, 62.7, 84.1, 99.8, 99.7, 100.0, 99.7, 99.6, 99.1, 99.8, 99.7, 99.5, 99.5, 99.4, 99.5, 97.1, 90.6, 98.1, 94.9, 93.4, 98.6, 96.4, 97.4, 93.5, 96.6, 99.9, 99.5, 99.5, 99.4, 99.3, 88.5, 76.7])
scores_new.append(RandomUnderSampler_new)

RandomUnderSampler_real = Scores(name='RandomUnderSampler_real',
                   accuracy=[94.4, 93.5, 90.9, 94.8, 93.5, 94.4, 94.7, 96.1, 96.7, 97.0, 97.0, 97.2, 97.5, 97.1, 97.6, 97.9, 97.7, 97.8, 97.7, 97.6, 97.7, 97.9, 97.8, 97.9, 97.7, 97.6, 97.7, 98.1, 98.0, 98.0, 98.1, 98.1, 98.2, 98.0, 98.1],
                   f1=[68.5, 71.6, 65.9, 76.9, 72.8, 84.6, 76.5, 82.5, 85.4, 86.4, 86.6, 87.3, 88.4, 86.8, 88.8, 90.2, 89.1, 89.7, 89.2, 88.7, 89.5, 90.2, 89.6, 90.1, 89.0, 88.6, 89.3, 91.1, 90.5, 90.6, 91.1, 91.1, 91.4, 90.6, 90.9],
                   recall=[52.1, 82.4, 87.2, 87.4, 90.9, 91.1, 86.7, 92.5, 97.1, 94.8, 95.9, 95.9, 96.2, 94.3, 96.4, 97.4, 96.4, 96.8, 95.2, 95.8, 96.5, 97.9, 96.1, 96.7, 95.0, 92.5, 95.1, 97.3, 97.0, 96.0, 96.6, 96.7, 97.0, 95.1, 96.9],
                   precision=[100.0, 63.3, 53.0, 68.6, 60.7, 79.1, 68.4, 74.4, 76.2, 79.4, 79.0, 80.1, 81.7, 80.3, 82.3, 84.0, 82.9, 83.6, 83.9, 82.5, 83.4, 83.7, 84.0, 84.4, 83.7, 85.0, 84.2, 85.5, 84.8, 85.8, 86.1, 86.1, 86.3, 86.6, 85.5])
scores_real.append(RandomUnderSampler_real)

NearMiss_new = Scores(name='NearMiss_new',
                   accuracy=[94.4, 97.1, 88.2, 89.1, 93.2, 92.9, 91.2, 89.8, 95.8, 97.0, 97.7, 95.8, 97.6, 96.4, 98.5, 97.8, 94.9, 98.9, 90.9, 90.8, 89.8, 94.5, 86.0, 97.5, 96.0, 64.4, 86.8, 91.0, 99.6, 98.9, 92.4, 96.8, 97.9, 72.5, 75.0],
                   f1=[68.7, 74.9, 59.1, 60.9, 69.6, 85.5, 95.3, 94.4, 97.8, 98.4, 98.8, 97.7, 98.7, 98.1, 99.2, 98.8, 97.2, 99.4, 94.0, 92.2, 92.6, 96.1, 89.6, 98.6, 97.2, 75.3, 90.8, 94.5, 99.8, 99.4, 96.0, 98.4, 98.9, 80.7, 83.6],
                   recall=[52.4, 72.9, 81.9, 83.1, 81.4, 85.2, 91.3, 89.4, 95.8, 97.1, 97.9, 96.1, 97.8, 96.6, 98.9, 98.3, 95.3, 99.2, 90.9, 96.1, 89.0, 97.9, 86.4, 99.3, 98.9, 61.4, 87.0, 92.5, 99.7, 99.1, 92.5, 97.4, 98.7, 74.2, 92.0],
                   precision=[100.0, 77.0, 46.3, 48.1, 60.8, 85.8, 99.8, 100.0, 100.0, 99.7, 99.6, 99.4, 99.5, 99.7, 99.5, 99.3, 99.2, 99.7, 97.3, 88.6, 96.6, 94.3, 93.0, 97.9, 95.5, 97.1, 94.9, 96.5, 99.9, 99.7, 99.7, 99.4, 99.2, 88.5, 76.7])
scores_new.append(NearMiss_new)

NearMiss_real = Scores(name='NearMiss_real',
                   accuracy=[94.5, 96.9, 83.0, 89.2, 93.2, 92.1, 96.7, 96.7, 96.8, 96.9, 96.9, 96.5, 96.7, 96.3, 96.2, 96.3, 96.1, 96.1, 96.0, 95.8, 96.1, 96.2, 96.0, 95.6, 95.6, 95.7, 98.1, 98.4, 98.4, 98.4, 98.4, 98.3, 98.5, 98.3, 98.3],
                   f1=[68.9, 83.7, 49.2, 60.2, 71.0, 78.6, 84.4, 84.8, 85.7, 86.2, 86.0, 84.7, 85.6, 83.7, 83.8, 83.9, 83.2, 83.4, 82.6, 82.0, 83.4, 83.8, 83.0, 81.8, 81.4, 81.3, 90.8, 92.5, 92.2, 92.3, 92.6, 92.0, 92.7, 91.6, 91.7],
                   recall=[52.6, 79.4, 81.9, 83.3, 86.6, 84.9, 89.2, 92.0, 96.5, 95.9, 96.3, 97.0, 97.2, 95.4, 97.8, 97.8, 96.3, 98.2, 95.8, 96.7, 97.6, 98.7, 97.2, 97.8, 96.2, 93.7, 94.2, 96.1, 96.4, 95.4, 96.7, 96.3, 95.7, 94.8, 95.4],
                   precision=[100.0, 88.5, 35.2, 47.1, 60.2, 73.1, 80.2, 78.6, 77.1, 78.2, 77.6, 75.2, 76.5, 74.5, 73.3, 73.5, 73.3, 72.5, 72.7, 71.2, 72.8, 72.9, 72.4, 70.2, 70.5, 71.8, 87.5, 89.0, 88.2, 89.3, 88.7, 88.1, 89.9, 88.7, 88.3])
scores_real.append(NearMiss_real)

SMOTEENN_new = Scores(name='SMOTEENN_new',
                   accuracy=[94.3, 95.2, 94.7, 95.5, 96.5, 94.9, 80.2, 85.5, 93.4, 92.7, 90.1, 91.7, 92.7, 91.7, 94.4, 93.9, 95.0, 97.3, 89.2, 85.5, 87.0, 92.3, 83.4, 95.2, 95.6, 61.4, 82.1, 86.1, 99.2, 99.0, 92.1, 94.6, 97.4, 27.5, 33.3],
                   f1=[68.3, 63.3, 74.0, 77.3, 81.7, 89.3, 88.8, 91.8, 96.6, 95.9, 94.5, 95.3, 95.9, 95.5, 96.9, 96.5, 97.2, 98.5, 92.7, 86.8, 90.3, 94.4, 87.6, 97.2, 96.9, 72.7, 87.4, 91.3, 99.6, 99.5, 95.8, 97.2, 98.7, 29.3, 42.9],
                   recall=[51.8, 69.9, 72.1, 74.6, 81.8, 87.2, 80.0, 84.9, 93.3, 92.5, 89.9, 91.8, 92.6, 91.7, 94.7, 94.0, 95.3, 97.5, 88.2, 84.4, 83.9, 94.7, 83.9, 95.9, 96.7, 58.3, 82.4, 87.5, 99.4, 99.2, 92.4, 95.2, 98.5, 19.4, 36.0],
                   precision=[100.0, 57.8, 76.0, 80.2, 81.6, 91.6, 99.9, 100.0, 100.0, 99.5, 99.7, 99.0, 99.4, 99.6, 99.2, 99.2, 99.3, 99.5, 97.7, 89.3, 97.8, 94.1, 91.7, 98.6, 97.1, 96.5, 93.0, 95.5, 99.8, 99.7, 99.5, 99.4, 98.8, 60.0, 52.9])
scores_new.append(SMOTEENN_new)

# SMOTEENN_real = Scores(name='SMOTEENN_real',
#                    accuracy=,
#                    f1=,
#                    recall=,
#                    precision=)

SMOTETomek_new = Scores(name='SMOTETomek_new',
                   accuracy=[94.3, 96.6, 95.8, 96.1, 96.8, 94.4, 77.8, 84.7, 94.0, 93.6, 95.7, 94.3, 95.7, 94.3, 97.4, 97.4, 94.9, 98.6, 90.5, 89.3, 89.8, 94.5, 84.2, 96.6, 96.9, 61.6, 87.2, 93.8, 99.7, 98.9, 92.8, 97.0, 97.7, 70.0, 69.4],
                   f1=[67.8, 68.8, 77.4, 79.0, 82.4, 88.0, 87.3, 91.4, 96.9, 96.4, 97.7, 96.8, 97.6, 97.0, 98.6, 98.5, 97.2, 99.2, 93.7, 90.6, 92.5, 96.0, 88.0, 98.1, 97.8, 72.6, 91.2, 96.3, 99.8, 99.4, 96.2, 98.5, 98.8, 79.3, 80.7],
                   recall=[51.3, 63.9, 68.8, 72.8, 78.7, 83.6, 77.6, 84.1, 94.0, 93.1, 95.8, 94.3, 95.6, 94.3, 97.7, 97.5, 95.1, 98.9, 90.3, 91.2, 87.5, 97.1, 83.1, 97.9, 98.7, 57.8, 89.1, 96.7, 99.8, 99.3, 93.1, 97.7, 98.8, 74.2, 92.0],
                   precision=[100.0, 74.6, 88.4, 86.4, 86.5, 92.9, 99.8, 100.0, 100.0, 99.9, 99.7, 99.5, 99.8, 99.8, 99.5, 99.6, 99.4, 99.5, 97.3, 90.1, 98.1, 95.0, 93.6, 98.2, 97.0, 97.8, 93.5, 95.9, 99.9, 99.5, 99.5, 99.3, 98.8, 85.2, 71.9])
scores_new.append(SMOTETomek_new)



# SMOTETomek_real = Scores(name='SMOTETomek_real',
#                    accuracy=,
#                    f1=,
#                    recall=,
#                    precision=)

CLASSWEIGHT_BALANCED_new = Scores(name='CLASSWEIGHT_BALANCED_new',
                   accuracy=[94.1, 97.1, 95.2, 96.2, 95.3, 90.4, 67.9, 74.4, 89.8, 90.0, 93.9, 92.8, 92.2, 93.1, 97.2, 97.1, 96.7, 98.4, 89.7, 91.2, 90.5, 94.7, 84.0, 97.3, 97.4, 61.8, 88.7, 91.7, 99.6, 99.1, 92.8, 97.7, 97.7, 70.0, 69.4],
                   f1=[66.4, 69.5, 70.0, 77.4, 69.4, 75.9, 80.5, 84.7, 94.6, 94.3, 96.7, 95.9, 95.6, 96.3, 98.5, 98.4, 98.2, 99.2, 93.1, 92.1, 93.1, 96.1, 87.9, 98.5, 98.1, 72.8, 92.3, 95.0, 99.8, 99.5, 96.2, 98.8, 98.8, 79.3, 80.7],
                   recall=[49.7, 54.9, 54.0, 64.1, 55.1, 61.2, 67.4, 73.5, 89.7, 89.1, 93.6, 92.2, 91.6, 93.0, 97.4, 97.2, 96.9, 98.6, 89.2, 91.2, 88.5, 96.8, 83.3, 98.4, 99.3, 58.2, 90.2, 94.2, 99.8, 99.6, 93.1, 98.2, 98.8, 74.2, 92.0],
                   precision=[100.0, 94.8, 99.6, 97.8, 93.7, 99.8, 100.0, 100.0, 100.0, 100.0, 100.0, 99.9, 99.9, 99.8, 99.6, 99.5, 99.6, 99.7, 97.4, 93.0, 98.1, 95.5, 93.1, 98.5, 97.0, 97.4, 94.6, 95.8, 99.8, 99.5, 99.5, 99.4, 98.8, 85.2, 71.9])
scores_new.append(CLASSWEIGHT_BALANCED_new)

CLASSWEIGHT_BALANCED_real = Scores(name='CLASSWEIGHT_BALANCED_real',
                   accuracy=[94.3, 96.5, 95.9, 96.6, 96.3, 94.2, 97.0, 97.8, 98.6, 98.4, 98.3, 98.4, 98.4, 98.2, 98.4, 98.3, 98.1, 98.1, 97.8, 97.8, 97.9, 97.9, 97.9, 97.9, 97.7, 97.5, 97.8, 98.1, 97.9, 97.9, 98.0, 97.8, 97.9, 97.8, 97.9],
                   f1=[67.6, 79.3, 74.3, 79.5, 76.1, 79.7, 83.1, 88.0, 92.7, 91.7, 91.4, 92.3, 92.3, 91.4, 92.3, 91.9, 90.7, 91.2, 89.7, 89.9, 90.1, 90.3, 89.9, 90.2, 89.2, 88.1, 89.6, 91.2, 90.2, 90.3, 90.9, 89.7, 90.4, 89.6, 90.3],
                   recall=[51.0, 66.1, 59.5, 66.6, 61.8, 66.7, 72.7, 80.3, 90.5, 89.6, 91.0, 93.9, 93.9, 93.2, 96.4, 96.6, 95.2, 96.9, 94.6, 96.1, 96.2, 97.3, 95.8, 96.4, 95.0, 92.8, 95.0, 97.5, 97.0, 96.6, 97.5, 96.7, 97.6, 95.6, 97.3],
                   precision=[100.0, 99.1, 98.9, 98.7, 98.9, 99.0, 97.0, 97.5, 94.9, 93.9, 91.8, 90.9, 90.7, 89.6, 88.5, 87.7, 86.6, 86.1, 85.4, 84.4, 84.8, 84.2, 84.7, 84.7, 84.1, 83.9, 84.8, 85.7, 84.2, 84.7, 85.1, 83.6, 84.2, 84.2, 84.3])
scores_real.append(CLASSWEIGHT_BALANCED_real)

# print('NEW')
# print('Avg accuracy \t', round(sum(RandomUnderSampler_new.accuracy) / len(RandomUnderSampler_new.accuracy), 1))
# print('Avg f1 \t\t', round(sum(RandomUnderSampler_new.f1) / len(RandomUnderSampler_new.f1), 1))
# print('Avg recall \t', round(sum(RandomUnderSampler_new.recall) / len(RandomUnderSampler_new.recall), 1))
# print('Avg precision \t', round(sum(RandomUnderSampler_new.precision) / len(RandomUnderSampler_new.precision), 1))

# print('\nREAL')
# print('Avg accuracy \t', round(sum(RandomUnderSampler_real.accuracy) / len(RandomUnderSampler_real.accuracy), 1))
# print('Avg f1 \t\t', round(sum(RandomUnderSampler_real.f1) / len(RandomUnderSampler_real.f1), 1))
# print('Avg recall \t', round(sum(RandomUnderSampler_real.recall) / len(RandomUnderSampler_real.recall), 1))
# print('Avg precision \t', round(sum(RandomUnderSampler_real.precision) / len(RandomUnderSampler_real.precision), 1))

print('NEW')
print(CLASSWEIGHT_BALANCED_new.avg_accuracy(),
      CLASSWEIGHT_BALANCED_new.avg_f1(),
      CLASSWEIGHT_BALANCED_new.avg_recall(),
      CLASSWEIGHT_BALANCED_new.avg_precision())
print('\nREAL')
print(CLASSWEIGHT_BALANCED_real.avg_accuracy(),
      CLASSWEIGHT_BALANCED_real.avg_f1(),
      CLASSWEIGHT_BALANCED_real.avg_recall(),
      CLASSWEIGHT_BALANCED_real.avg_precision())

# print('NEW')
# for score in scores_new:
#     print(score.name, score.avg_recall())

# print('REAL')
# for score in scores_real:
#     print(score.name, score.avg_recall())


# accuracy_plot = Plot('Accuracy comparison of RandomUnderSampler, NearMiss and SMOTE tested on realistic data',
#                          'accuracy_comparison_RandomUnderSampler_NearMiss_SMOTE_realisticdata.png')
# accuracy_plot.add_graph(Graph(RandomUnderSampler_real.accuracy, 'y', 's', '-.', 'RandomUnderSampler'))
# accuracy_plot.add_graph(Graph(NearMiss_real.accuracy, 'c', 'o', '-', 'NearMiss'))
# accuracy_plot.add_graph(Graph(SMOTE_real.accuracy, 'm', 'v', ':', 'SMOTE'))
# # accuracy_plot.add_graph(Graph(retrain_scores.accuracy, 'g', '*', '--', 'retrain'))  
# accuracy_plot.display()

# f1_plot = Plot('F1 comparison of RandomUnderSampler, NearMiss and SMOTE tested on realistic data',
#                 'f1_comparison_RandomUnderSampler_NearMiss_SMOTE_realisticdata.png')
# f1_plot.add_graph(Graph(RandomUnderSampler_real.f1, 'y', 's', '-.', 'RandomUnderSampler'))
# f1_plot.add_graph(Graph(NearMiss_real.f1, 'c', 'o', '-', 'NearMiss'))
# f1_plot.add_graph(Graph(SMOTE_real.f1, 'm', 'v', ':', 'SMOTE'))
# # f1_plot.add_graph(Graph(retrain_scores.f1, 'g', '*', '--', 'retrain'))  
# f1_plot.display()

# recall_plot = Plot('Recall comparison of RandomUnderSampler, NearMiss and SMOTE tested on realistic data',
#                     'recall_comparison_RandomUnderSampler_NearMiss_SMOTE_realisticdata.png')
# recall_plot.add_graph(Graph(RandomUnderSampler_real.recall, 'y', 's', '-.', 'RandomUnderSampler'))
# recall_plot.add_graph(Graph(NearMiss_real.recall, 'c', 'o', '-', 'NearMiss'))
# recall_plot.add_graph(Graph(SMOTE_real.recall, 'm', 'v', ':', 'SMOTE'))
# # recall_plot.add_graph(Graph(retrain_scores.recall, 'g', '*', '--', 'retrain'))  
# recall_plot.display()

# precision_plot = Plot('Precision comparison of RandomUnderSampler, NearMiss and SMOTE tested on realistic data',
#                         'precision_comparison_RandomUnderSampler_NearMiss_SMOTE_realisticdata.png')
# precision_plot.add_graph(Graph(RandomUnderSampler_real.precision, 'y', 's', '-.', 'RandomUnderSampler'))
# precision_plot.add_graph(Graph(NearMiss_real.precision, 'c', 'o', '-', 'NearMiss'))
# precision_plot.add_graph(Graph(SMOTE_real.precision, 'm', 'v', ':', 'SMOTE'))
# # precision_plot.add_graph(Graph(retrain_scores.precision, 'g', '*', '--', 'retrain'))  
# precision_plot.display()